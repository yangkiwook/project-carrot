<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- <sql> 태그 사용하기 => 자주 사용되는 SQL문은 별도로 정의해두고 포함한다. -->

<mapper namespace="carrot.dao.DeliveryDao2">

	<!-- 객체의 컬럼과 프로퍼티를 연결한다. -->

	<!-- 객체의 컬럼과 프로퍼티를 연결한다. -->
	<resultMap type="Delivery2" id="deliveryMap2">
		<!-- PK 컬럼은 id 태그를 사용하여 지정한다. -->
		<id column="GCODE" property="gno" />
		<result column="SNO" property="sno" />
		<result column="CCNAME" property="ccname"/>
		<result column="ORDATE" property="oddate" />
		
		<result column="GNAME" property="gname" />
		<result column="GCAT" property="gcat" />
		<result column="GUNIT" property="gunit" />
		<result column="OQTY" property="oqty" />
		
		<result column="GMEMO" property="gmemo"/>
		
		<result column="GPRICE_A" property="gprice_a" />
		<result column="GPRICE_B" property="gprice_b" />
		<result column="GPRICE_C" property="gprice_c" />
		<result column="OPRICE2" property="oprice2"/>
	</resultMap>


	<select id="selectList2" parameterType="map" resultMap="deliveryMap2">
		<!-- <include refid="deliverySelect2" /> -->
			SELECT G.GCODE, G.GNAME, G.GCAT, G.GUNIT, O.OQTY, ROUND((O.OPRICE/O.OQTY),0) OPRICE2, G.GMEMO
		FROM GOODS G, ORDERLIST O, SUPPLIER S, MATCHING M, CLIENT C
		WHERE S.SNO = M.SNO AND C.CNO = M.CNO
		AND O.SNO = M.SNO AND M.CNO = O.CNO
		AND G.GCODE = O.GCODE 	
		AND C.CCNAME = #{ccname} AND O.ORDATE = #{oddate}
		ORDER BY ORDATE
		<!-- SELECT G.GCODE, G.GNAME, G.GCAT, G.GUNIT, O.OQTY, ROUND((O.OPRICE/O.OQTY),0) OPRICE2, G.GMEMO
		FROM GOODS G, ORDERLIST O, SUPPLIER S, MATCHING M, CLIENT C
		WHERE S.SNO = M.SNO AND C.CNO = M.CNO
		AND O.SNO = M.SNO AND M.CNO = O.CNO
		AND G.GCODE = O.GCODE AND G.SNO = O.SNO		
		AND G.SNO = S.SNO 
		AND C.CCNAME = #{ccname} AND O.ORDATE = #{oddate}
		GROUP BY G.GCODE -->
		<if test="pageSize > 0">
			limit #{startIndex}, #{pageSize}
		</if>
	</select>




	<select id="totalSize" resultType="int">
		SELECT count(GNO) FROM GOODS
	</select>

	
</mapper>



















